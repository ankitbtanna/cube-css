:root {
  --color-neutral-100: #ffffff;
  --color-neutral-200: #f5f7ff;
  --color-neutral-300: #7281a7;
  --color-neutral-400: #1f2f56;

  --color-primary-100: #e0e8ff;
  --color-primary-200: #756af1;
  --color-primary-300: #3829e0;

  --font-weight-100: 100;
  --font-weight-200: 300;
  --font-weight-300: 400;
  --font-weight-400: 500;
  --font-weight-500: 700;
  --font-weight-600: 900;

  --font-size-100: 1rem;
  --font-size-200: 1.2rem;
  --font-size-300: 1.4rem;
  --font-size-400: 1.6rem;
  --font-size-500: 2.8rem;

  --line-height-100: 1.1;
  --line-height-200: 1.6;

  --space-15: 1.5rem;
  --space-24: 2.4rem;
  --space-48: 4.8rem;

  --border-radius-100: 2rem;
  --border-radius-200: 3rem;
}

/* Works because I gave viewencapsulation none to the component */
/* Base the font and color to something that you see the most */
body {
  font-family: 'Roboto', sans-serif;
  font-size: var(--font-size-400);
  font-weight: var(--font-weight-300);
  color: var(--color-neutral-300);
  background-color: var(--color-primary-100);
  line-height: var(--line-height-200);

  /* centering the card */
  display: grid;
  place-items: center;
}

h1,
h2,
h3 {
  line-height: var(--line-height-100);
}

h2 {
  font-size: var(--font-size-500);
  font-weight: var(--font-weight-600);
  color: var(--color-neutral-400);
}

/* Above code, do as much element selector as possible. Set the stage to build off of.*/

/* Composition */
// Separation of concerns of what is controlling the layout and what is controlling the other styles
// Spacing issues fall under layout so they come here
// They are also utility classes

/* IDEA: Give a margin between each element */
// Select every sibling that has a sibling before it
// OPTION 1
/* .flow > * + * {
  margin-top: 1em;
} */

// OPTION 2
/* .flow > :not(:last-child) {
  margin-bottom: 1em;
} */

// OPTION 3
// wrapping it inside :where to kill the specificity for overriding later
.flow > :where(:not(:first-child)) {
  // used em because it is relative to the font size
  // larger font size, larger margin
  // use var(--flow-spacer) to make it easier to change
  // gave it a default value of 1em
  margin-top: var(--flow-spacer, 1em);
}

// OPTION 4
.grid-flow {
  display: grid;
  gap: 1em;
}

.flex-row {
  display: flex;
  gap: var(--space-15);
}

/************************************************/

/* Utility */
// Can be generated by a tool like tailwindcss
.padding {
  &-15 {
    padding: var(--space-15);
  }

  &-24 {
    padding: var(--space-24);
  }

  &-48 {
    padding: var(--space-48);
  }
}

.text-dark {
  color: var(--color-neutral-400);
}

.text-subdued {
  color: var(--color-neutral-300);
}

.background {
  &-white {
    background-color: var(--color-neutral-100);
  }

  &-subdued {
    background-color: var(--color-neutral-200);
  }
}

.text-align {
  &-center {
    text-align: center;
  }

  &-right {
    text-align: right;
  }

  &-left {
    text-align: left;
  }

  // works for rtl/ltr languages
  &-start {
    text-align: start;
  }

  // works for rtl/ltr languages
  &-end {
    text-align: end;
  }
}

.font-weight {
  &-bold {
    font-weight: var(--font-weight-500);
  }

  &-extra-bold {
    font-weight: var(--font-weight-600);
  }
}

.br {
  &-1 {
    border-radius: var(--border-radius-100);
  }

  &-2 {
    border-radius: var(--border-radius-200);
  }
}

.push-right {
  margin-left: auto;
}

a,
.link {
  background: transparent;
  border: 0;
  color: var(--color-primary-300);
  text-decoration: underline;
  font-weight: var(--font-weight-500);

  &:hover {
    color: var(--color-primary-200);
    text-decoration: none;
    cursor: pointer;
  }
}

/************************************************/

/* Block */

.card {
  max-width: 45rem;
  overflow: hidden; // infrequent, hence not a utility
}

.button {
  background-color: transparent;
  cursor: pointer;
  text-decoration: none;
  color: var(--color-neutral-100);
  font-weight: var(--font-weight-500);
  border: 0;
  border-radius: 0.5rem;
  padding: 1em 2em;

  &[data-type='primary'] {
    background-color: var(--color-primary-300);

    &:hover,
    &:focus {
      background-color: var(--color-primary-200);
    }
  }

  &[data-type='secondary'] {
    color: var(--color-neutral-300);
    padding: 0;

    &:hover,
    &:focus {
      color: var(--color-neutral-400);
    }
  }
}

/************************************************/

/* Exception */

/************************************************/
